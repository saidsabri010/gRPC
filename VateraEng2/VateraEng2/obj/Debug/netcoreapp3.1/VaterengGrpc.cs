// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/vatereng.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace VateraEng2 {
  public static partial class Vatera
  {
    static readonly string __ServiceName = "vatera.Vatera";

    static readonly grpc::Marshaller<global::VateraEng2.User> __Marshaller_vatera_User = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::VateraEng2.User.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::VateraEng2.Session_Id> __Marshaller_vatera_Session_Id = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::VateraEng2.Session_Id.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::VateraEng2.Result> __Marshaller_vatera_Result = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::VateraEng2.Result.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::VateraEng2.Data> __Marshaller_vatera_Data = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::VateraEng2.Data.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::VateraEng2.Empty> __Marshaller_vatera_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::VateraEng2.Empty.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::VateraEng2.Data2> __Marshaller_vatera_Data2 = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::VateraEng2.Data2.Parser.ParseFrom);

    static readonly grpc::Method<global::VateraEng2.User, global::VateraEng2.Session_Id> __Method_Login = new grpc::Method<global::VateraEng2.User, global::VateraEng2.Session_Id>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Login",
        __Marshaller_vatera_User,
        __Marshaller_vatera_Session_Id);

    static readonly grpc::Method<global::VateraEng2.Session_Id, global::VateraEng2.Result> __Method_Logout = new grpc::Method<global::VateraEng2.Session_Id, global::VateraEng2.Result>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Logout",
        __Marshaller_vatera_Session_Id,
        __Marshaller_vatera_Result);

    static readonly grpc::Method<global::VateraEng2.Data, global::VateraEng2.Result> __Method_Add = new grpc::Method<global::VateraEng2.Data, global::VateraEng2.Result>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Add",
        __Marshaller_vatera_Data,
        __Marshaller_vatera_Result);

    static readonly grpc::Method<global::VateraEng2.Data, global::VateraEng2.Result> __Method_Delete = new grpc::Method<global::VateraEng2.Data, global::VateraEng2.Result>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Delete",
        __Marshaller_vatera_Data,
        __Marshaller_vatera_Result);

    static readonly grpc::Method<global::VateraEng2.Data, global::VateraEng2.Result> __Method_Update = new grpc::Method<global::VateraEng2.Data, global::VateraEng2.Result>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Update",
        __Marshaller_vatera_Data,
        __Marshaller_vatera_Result);

    static readonly grpc::Method<global::VateraEng2.Empty, global::VateraEng2.Data2> __Method_Display = new grpc::Method<global::VateraEng2.Empty, global::VateraEng2.Data2>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "Display",
        __Marshaller_vatera_Empty,
        __Marshaller_vatera_Data2);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::VateraEng2.VaterengReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Vatera</summary>
    [grpc::BindServiceMethod(typeof(Vatera), "BindService")]
    public abstract partial class VateraBase
    {
      public virtual global::System.Threading.Tasks.Task<global::VateraEng2.Session_Id> Login(global::VateraEng2.User request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::VateraEng2.Result> Logout(global::VateraEng2.Session_Id request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::VateraEng2.Result> Add(global::VateraEng2.Data request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::VateraEng2.Result> Delete(global::VateraEng2.Data request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::VateraEng2.Result> Update(global::VateraEng2.Data request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task Display(global::VateraEng2.Empty request, grpc::IServerStreamWriter<global::VateraEng2.Data2> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(VateraBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Login, serviceImpl.Login)
          .AddMethod(__Method_Logout, serviceImpl.Logout)
          .AddMethod(__Method_Add, serviceImpl.Add)
          .AddMethod(__Method_Delete, serviceImpl.Delete)
          .AddMethod(__Method_Update, serviceImpl.Update)
          .AddMethod(__Method_Display, serviceImpl.Display).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, VateraBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_Login, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::VateraEng2.User, global::VateraEng2.Session_Id>(serviceImpl.Login));
      serviceBinder.AddMethod(__Method_Logout, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::VateraEng2.Session_Id, global::VateraEng2.Result>(serviceImpl.Logout));
      serviceBinder.AddMethod(__Method_Add, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::VateraEng2.Data, global::VateraEng2.Result>(serviceImpl.Add));
      serviceBinder.AddMethod(__Method_Delete, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::VateraEng2.Data, global::VateraEng2.Result>(serviceImpl.Delete));
      serviceBinder.AddMethod(__Method_Update, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::VateraEng2.Data, global::VateraEng2.Result>(serviceImpl.Update));
      serviceBinder.AddMethod(__Method_Display, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::VateraEng2.Empty, global::VateraEng2.Data2>(serviceImpl.Display));
    }

  }
}
#endregion
